@model IEnumerable<EmployeeApp.Models.EmployeeModel>
@* @model EmployeeApp.Models.EmployeeModel; *@

@{
    ViewData["title"] = "Employee List";
}

<h2>@ViewData["title"]</h2>

<p>
    @* <a asp-action="create" class="btn btn-primary btn-sm">Add</a> *@
    <button type="button" class="btn btn-primary" data-bs-toggle="modal"  data-bs-target="#saveEmployee">
        Add
    </button>
</p>

<!-- Button trigger modal -->
<!-- Modal for Add Data -->
<div class="modal fade" id="saveEmployee" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="saveEmployeeLabel">Add Details</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                @* <form asp-action="create" enctype="multipart/form-data"> *@

                    <div class="mb-3">
                        <label for="firstName" class="form-label">First Name : </label>
                        <input id="firstName" type="text" name="firstName" class="form-control" autocomplete="off" />
                    </div>

                    <div class="mb-3">
                        <label for="lastName" class="form-label">Last Name : </label>
                        <input id="lastName" type="text" name="lastName" class="form-control" autocomplete="off" />
                    </div>

                    <div class="mb-3">
                        <label for="contactNumber" class="form-label">Contact Number : </label>
                        <input id="contactNumber" type="tel" name="contactNumber" class="form-control" autocomplete="off" />
                    </div>

                    <div class="mb-3">
                        <label for="emailId" class="form-label">Email Id : </label>
                        <input id="emailId" type="email" name="emailId" class="form-control" autocomplete="off" />
                    </div>

                    <div class="mb-3">
                        <label for="age" class="form-label">Age : </label>
                        <input id="age" type="number" name="age" class="form-control" autocomplete="off" />
                    </div>

                    <div class="mb-3">
                        <label for="imageFile" class="form-label">Image : </label>
                        <input id="imageFile" name="imageFile" type="file" class="form-control" autocomplete="off" />
                    </div>
                    
                   @*  <button  class="btn btn-outline-primary mb-3">Submit</button> *@

                @* </form> *@
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <button type="submit" onclick="addemployee()" class="btn btn-primary">Save changes</button>
            </div>
        </div>
    </div>
</div>


<!-- Modal for Update Data -->
<div class="modal fade" id="updateEmployeeModal" tabindex="-1" aria-labelledby="updateEmployeeModal" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="updateEmployeeModalLabel">Employee Update</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">

                <form>
                    <input id="IdUpdate" name="Id" type="number" class="form-control" autocomplete="off" hidden/>

                    <div class="mb-3">
                        <label for="firstName" class="form-label">First Name : </label>
                        <input id="firstNameUpdate" name="firstName" type="text" class="form-control" autocomplete="off" />
                    </div>

                    <div class="mb-3">
                        <label for="lastName" class="form-label">Last Name : </label>
                        <input id="lastNameUpdate" name="lastName" type="text" class="form-control" autocomplete="off" />
                    </div>

                    <div class="mb-3">
                        <label for="contactNumber" class="form-label">Contact Number : </label>
                        <input id="contactNumberUpdate" name="contactNumber" type="tel" class="form-control" autocomplete="off" />
                    </div>

                    <div class="mb-3">
                        <label for="emailId" class="form-label">Email Id : </label>
                        <input id="emailIdUpdate" name="emailId" type="email" class="form-control" autocomplete="off" />
                    </div>

                    <div class="mb-3">
                        <label for="age" class="form-label">Age: </label>
                        <input id="ageUpdate" name="age" type="number" class="form-control" autocomplete="off" />
                    </div>

                    <div class="mb-3" >
                        <label for="imageFile" class="form-label">Image : </label>
                        <input id="imageFileUpdate" name="imageFile" type="file" class="form-control" onchange="previewImage(this)" autocomplete="off" />
                        @* <img id="imagePreviewUpdate" src="#" alt="Image Preview" style="max-width: 100%; max-height: 150px; margin-top: 10px; display: none;"> *@
                    </div>
                    <div class="mb-3" style="display: flex; flex-direction: column;">
                        
                        <img id="imagePreviewUpdate" src="#" alt="Image Preview" style="max-width: 50%; max-height: 150px; margin-top: 10px; display: none;">
                    </div>
                </form>

            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <button type="button" onclick="updateEmployeeData()" class="btn btn-primary">Save changes</button>
            </div>
        </div>
    </div>
</div>
</div>

 
<!-- Modal for View Data -->
 <div class="modal fade" id="viewExampleModal" tabindex="-1" aria-labelledby="viewExampleModal" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="viewExampleModalLabel">Employee View</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                    <form>
                    <input id="IdView" name="Id" type="number" class="form-control" autocomplete="off" hidden />
                    <div class="mb-3">
                        <label for="firstName" class="form-label">First Name : </label>
                        <input id="firstNameView" name="firstName" type="text" class="form-control" autocomplete="off" />
                    </div>

                    <div class="mb-3">
                        <label for="lastName" class="form-label">Last Name : </label>
                        <input id="lastNameView" name="lastName" type="text" class="form-control" autocomplete="off" />
                    </div>

                    <div class="mb-3">
                        <label for="contactNumber" class="form-label">Contact Number : </label>
                        <input id="contactNumberView" name="contactNumber" type="tel" class="form-control" autocomplete="off" />
                    </div>

                    <div class="mb-3">
                        <label for="emailId" class="form-label">Email Id : </label>
                        <input id="emailIdView" name="emailId" type="email" class="form-control" autocomplete="off" />
                    </div>

                    <div class="mb-3">
                        <label for="age" class="form-label">Age : </label>
                        <input id="ageView" name="age" type="number" class="form-control" autocomplete="off" />
                    </div>

                    <div class="mb-3">
                        <label for="imageFile" class="form-label">Image : </label><br />
                        <input id="imageFileView" name="imageFile" type="file" class="form-control" onchange="previewImage(this)" autocomplete="off" hidden/>
                        @* <img id="imagePreviewUpdate" src="#" alt="Image Preview" style="max-width: 100%; max-height: 150px; margin-top: 10px; display: none;"> *@
                    </div>
                    <div class="mb-3" style="display: flex; flex-direction: column;">

                        <img id="imagePreviewView" src="#" alt="Image Preview" style="max-width: 50%; max-height: 150px; margin-top: 10px; display: none;">
                    </div>
                    </form>
            </div>
        </div>
    </div>
</div>
</div>

<table  class=" table table-striped table-bordered"  id="myTable" style="width:100% !important">
    <thead>
        <tr>
            @* <th>#</th> *@
            <th>@Html.DisplayNameFor(model => model.Id)</th>
            <th>@Html.DisplayNameFor(model => model.firstName)</th>
            <th>@Html.DisplayNameFor(model => model.lastName)</th>
            <th>@Html.DisplayNameFor(model => model.contactNumber)</th>
            <th>@Html.DisplayNameFor(model => model.emailId)</th>
            <th>@Html.DisplayNameFor(model => model.age)</th>
            <th>@Html.DisplayNameFor(model => model.imageFile)</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @*  @{
        int i = 1;
        @foreach (var item in Model)
        {
        <tr>
        <td>@i</td>
        <td>@Html.DisplayFor(modelItem => item.Id)</td>
        <td>@Html.DisplayFor(modelItem => item.firstName)</td>
        <td>@Html.DisplayFor(modelItem => item.lastName)</td>
        <td>@Html.DisplayFor(modelItem => item.contactNumber)</td>
        <td>@Html.DisplayFor(modelItem => item.emailId)</td>
        <td>@Html.DisplayFor(modelItem => item.age)</td>
        <td><img src="~/image/@item.imagePath" width="30px"></td>
        <td>
        <div class="btn-group" aria-label="Basic example">
        <a asp-action="update" asp-route-id="@item.Id" class="btn btn-primary btn-sm">Edit</a>
        <a asp-action="delete" asp-route-id="@item.Id" class="btn btn-primary btn-sm">Delete</a>
        </div>
        </td>
        </tr>
        i++;
        }
        }
        *@
    </tbody>
</table>

<script>
    
    
    var datatable;
    $(document).ready(function () {
     
        getEmployeeList();
    });
    function getEmployeeList() {
       $.ajax({

            type: "Get",
            url: "/Employee/EmployeeList",
            success: function (data) {
               
                debugger;
                datatable = $('#myTable').DataTable({
                    data: data,
                    columns: [
                        { data: 'Id' },
                        { data: 'firstName' },
                        { data: 'lastName' },
                        { data: 'contactNumber' },
                        { data: 'emailId' },
                        { data: 'age' },
                        {
                            data: 'imagePath', // Assume the data has a property named imageUrl that contains the image path
                            render: function (data, type, row) {
                                // Return an img tag with the image source and some attributes
                                return '<img src="/image/' + data + '" width="50" height="50" alt="Image" />';
                            }
                        },
                        {
                            data: null,
                            render: function (data, type, row) {

                                // return '<button type="button"  class="btn btn-primary" href="/Employee/update/' + row.id + '>Edit</a> |  < a href = "/Employee/delete/' + row.id + '" class="btn btn-danger btn-sm" > Delete < /a>';

                                return '<button type="button" onclick="populateFormData(' + row.Id + ')" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#updateEmployeeModal">EDIT</button>| <button type="button" onclick="deleteEmployee(' + row.Id + ')" class="btn btn-primary" >DELETE</button>| <button type="button" onclick="viewEmployee(' + row.Id + ')" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#viewExampleModal">VIEW</button>';

                            }
                        },

                    ]
                });
                // Success = true;//doesn't go here
               
            },
            error: function (textStatus, errorThrown) {
                Success = false; //doesn't go here
            }

        });
    }
    //Add Data Function
    function addemployee() {
        debugger;
        var empObj = {
            firstName: $('#firstName').val(),
            lastName: $('#lastName').val(),
            contactNumber: $('#contactNumber').val(),
            emailId: $('#emailId').val(),
            age: $('#age').val(),
            // imagePath: $('#imageFile')[0].files[0],
           
        }
        
        var formData=new FormData();
        formData.append("model", JSON.stringify(empObj));
        formData.append("file", $('#imageFile')[0].files[0]);

        $.ajax({        
            url: "/employee/create",
            // type: "POST",
            data: formData,
            processData: false,
            contentType: false,
            cache: false,
            type: "POST",
            // contentType: "application/json;charset=utf-8",
            // dataType: "json",
            success: function (data, textStatus, jqXHR) {
                datatable.destroy();   
                alert('Success!');
                $('#addEmployee').modal('hide');
                location.reload();
            },
            error: function (errormessage) {
                alert(errormessage.responseText);
            },
        });
    }


    function previewImage(input) {
        var file = input.files[0];

        if (file) {
            var reader = new FileReader();

            reader.onload = function (e) {
                $('#imagePreviewUpdate').attr('src', e.target.result).show();
            };

            reader.readAsDataURL(file);
        } else {
            // Clear the image preview if no file is selected
            $('#imagePreviewUpdate').attr('src', '').hide();
        }
    }


    // var updatebyid;

    //function for populating update data
    function populateFormData(empId) {
        debugger;
        $.ajax({
            type: "GET",
            url: "/Employee/populateUpdateData?emp_id=" + empId, // Adjust the URL to your endpoint
            // dataType: "json",
            success: function (employee) {
                debugger;

                // Populate the form with the received employee details
                $('#IdUpdate').val(employee.Id); // error
                $('#firstNameUpdate').val(employee.firstName);
                $('#lastNameUpdate').val(employee.lastName);
                $('#contactNumberUpdate').val(employee.contactNumber);
                $('#emailIdUpdate').val(employee.emailId);
                $('#ageUpdate').val(employee.age);

                var imagePreview = "/image/" + employee.imagePath;
                    // ? '/image/' + employee.profileImage
                    // : 'Upload Image';
                $('#imagePreviewUpdate').attr('src', imagePreview).show();
            },
            error: function (errormessage) {
                alert(errormessage.responseText);
            }
        });
    }

    //function for updating employee's record
    function updateEmployeeData() {
        debugger;

        var employeeID ={
            id: $('#IdUpdate').val(),
        }

        debugger;

        var employeeData = {
            // Id: $('#IdUpdate').val(),
            firstName: $('#firstNameUpdate').val(),
            lastName: $('#lastNameUpdate').val(),
            contactNumber: $('#contactNumberUpdate').val(),
            emailId: $('#emailIdUpdate').val(),
            age: $('#ageUpdate').val(),
        };

        debugger;

        var formData = new FormData();
        formData.append("Id", employeeID.id);
        formData.append("model", JSON.stringify(employeeData));
        formData.append("file", $("#imageFileUpdate")[0].files[0]);

        debugger;

        // debugger;
        $.ajax({
            type: "POST",
            url: "/Employee/update",
            data: formData,
            contentType: false,
            processData: false,
            cache: false,
            // contentType: "application/json;charset=utf-8",
            // dataType: "json",
            success: function (data) {
                // console.log("Updated Successfully");
                // $('#updateExampleModal').modal('hide');
                // location.reload();
                // datatable.destroy();
                // getEmployeeList();
                if (data === "Index") {
                    alert("Employee updated successfully!");
                    $('#updateExampleModal').modal('hide');
                    location.reload();
                } else {
                    // Handle errors or show appropriate messages
                    console.error("Error updating employee:", data);
                    alert("Failed to update employee. Please check the console for details.");
                }
            },
            error: function (errormessage) {
                alert(errormessage.responseText);
            }
        });
    }

    function viewEmployee(empId) {
        debugger;
        $.ajax({
            type: "GET",
            url: "/Employee/populateUpdateData?emp_id=" + empId, // Adjust the URL to your endpoint
            // dataType: "json",
            success: function (employee) {
                debugger;

                // Populate the form with the received employee details
                $('#IdView').val(employee.Id); // error
                $('#firstNameView').val(employee.firstName);
                $('#lastNameView').val(employee.lastName);
                $('#contactNumberView').val(employee.contactNumber);
                $('#emailIdView').val(employee.emailId);
                $('#ageView').val(employee.age);

                var imagePreview = "/image/" + employee.imagePath;
                // ? '/image/' + employee.profileImage
                // : 'Upload Image';
                $('#imagePreviewView').attr('src', imagePreview).show();
            },
            error: function (errormessage) {
                alert(errormessage.responseText);
            }
        });
    }
   
    //function for deleting employee's record
    function deleteEmployee(Id) {
        debugger;
        var ans = confirm("Are you sure you want to delete this Record?");
        if (ans) {
       
            $.ajax({
                type: "GET",
                url: "/Employee/delete/" + Id,             
                success: function (result) {
                   alert("Employee deleted successfully!");
                   location.reload();
                },
                error: function (errormessage) {
                    alert(errormessage.responseText);
                    console.error("Error deleting employee:", errormessage);
                }
            });
        }
    }
    
</script>
